const en = {
  featureSelection: "Feature Selection",
  correlationAnalysis: "Correlation Analysis",
  applySelection: "Apply Selection",
  clearAll: "Clear All",
  colorLegend: "Color Legend",
  updateMap: "Update Map & Calculate Correlation",
  correlationResults: "Correlation Results",
  featureCorrelationMatrix: "Feature Correlation Matrix",
  gbGender: "Gender Features (Cyan)",
  gbClassifier: "Classifier Features (Orange)",
  value1Cyan: "Value = 1 (Cyan)",
  value0Blue: "Value = 0 (Light Blue)",
  naGray: "NA (Gray Border)",
  value1Orange: "Value = 1 (Orange)",
  value0Orange: "Value = 0 (Light Orange)",
  selectAll: "Select All",
  deselectAll: "Deselect All",
  selectedHint: "Selected ",
  chatTitle: "AI Assistant",
  send: "Send",
  suggestions: [
    "What are the most important gender features?",
    "Recommend features for social analysis",
    "Show correlations between feature groups",
    "Analyze geographical distribution",
    "Propose a research question",
    "Suggest analysis approaches"
  ],
  apiKeyTitle: "Set Gemini API Key",
  apiKey: "API Key",
  apiKeyPlaceholder: "Please enter your Gemini API Key",
  apiKeyNote1: "‚Ä¢ API Key is only saved in your local browser, not uploaded to server",
  apiKeyNote2: "‚Ä¢ You can get a free API Key at ",
  apiKeyNote3: "‚Ä¢ After setting, you can use the AI assistant feature",
  apiKeySave: "Save",
  apiKeyCancel: "Cancel",
  apiKeyDesc: "Instructions",
  apiKeyGet: "Google AI Studio",
  eaSocial: "EA Features (Social)",
  eaEcological: "EA Features (Ecological)",
  treeTitle: "Phylogenetic Tree Visualization",
  loadTree: "Load Tree",
  selectTree: "Select a tree file...",
  mapTitle: "Language Map",
  welcome: "Hello! I'm your AI language analysis assistant. I can help you analyze linguistic features, recommend analysis approaches, and provide insights about your dataset. Ask me anything about the language data!",
  langToggle: "‰∏≠Êñá/English",
  // Êñ∞Â¢ûÁöÑÁøªËØë
  gbFeatureType: "Grambank (GB) Feature",
  eaFeatureType: "D-PLACE (EA) Feature",
  ecologicalFeatureType: "Environmental/Biodiversity Feature",
  otherFeatureType: "Other Feature",
  featureInfoTitle: "Feature Information",
  close: "Close",
  noDescription: "No description available for this feature.",
  featureType: "Feature Type",
  // Linguistic Knowledge Base
  knowledgeBaseTitle: "üìö Linguistic Knowledge Base",
  knowledgeBaseDesc: "Click on any concept to get AI explanation and connections to your data:",
  // Knowledge Base Categories
  all: "All",
  typology: "Typology",
  universals: "Universals",
  areal: "Areal",
  methods: "Methods",
  // Analysis Method Categories
  correlation: "Correlation",
  phylogenetic: "Phylogenetic",
  spatial: "Spatial",
  sociolinguistics: "Sociolinguistics",
  ecolinguistics: "Ecolinguistics",
  historical: "Historical",
  // Complexity
  low: "Low",
  medium: "Medium",
  high: "High",
  // Common Text
  selected: "Selected",
  checkAI: "Check the AI Assistant for detailed explanation and connections to your data.",
  examples: "Examples",
  keyTheories: "Key Theories",
  relevance: "Relevance",
  useCase: "Use Case",
  category: "Category",
  complexity: "Complexity",
  aiExplanation: "AI Explanation",
  // Group Analysis Related
  selectGroupsToAnalyze: "Select {type} to analyze:",
  languageFamily: "Language Family",
  region: "Region",
  macroarea: "Macro Area",
  selectedCount: "Selected: {count}",
  // Correlation Analysis Related
  correlationMethodPearson: "Pearson Correlation",
  correlationMethodSpearman: "Spearman Rank Correlation",
  correlationMethodKendall: "Kendall's Tau",
  groupAnalysisType: "Group Analysis Type",
  groupAnalysisNone: "No Grouping (Overall Analysis)",
  groupAnalysisByFamily: "Group by Language Family",
  groupAnalysisByRegion: "Group by Region",
  groupAnalysisByMacroarea: "Group by Macro Area",
  groupCorrelationTitle: "Group Correlations ({method})",
  groupCorrelationTitleFallback: "Group Correlations",
  groupCorrelationSampleSize: "Sample size: {size} languages",
  groupedCorrelationTitle: "Grouped Correlation Analysis",
  groupedCorrelationByType: "Grouped by {type}",
  groupOverviewTitle: "Group Overview",
  sampleSize: "Sample size",
  sampleSizeTooSmall: "Sample size too small",
  languages: "languages",
  correlationMatrixTitle: "Correlation Matrix",
  vs: "vs",
  pValue: "p-value",
  groupDifferencesTitle: "Group Correlation Differences Analysis",
  compareCorrelationPatterns: "Compare correlation pattern differences between different {type}",
  cannotCalculateDifferences: "Cannot calculate differences (need at least 2 valid groups)",
  maxDifferencesTitle: "Maximum Difference Feature Pairs",
  featurePair: "Feature Pair",
  maxDifference: "Max Difference",
  groupsWithMaxDiff: "Groups with Max Difference",
  featureCorrelationTitle: "Feature Correlations",
  featureCorrelationSampleSize: "Sample size: {size} languages",
  clickToGetAIExplanation: "Click to get AI explanation of this correlation",
  calculating: "Calculating...",
  calculateCorrelations: "Calculate Correlations",
  // Dynamic Feature Selector Related
  dynamicFeatureSelectorTitle: "Dynamic Feature Selection",
  clearAllFeatures: "Clear All",
  selectAllGbFeatures: "All GB",
  selectAllEaFeatures: "All EA",
  selectedFeaturesCount: "Selected",
  gbFeatures: "GB features",
  eaFeatures: "EA features",
  hideSelector: "Hide",
  showSelector: "Show",
  searchGbPlaceholder: "Search GB features...",
  searchEaPlaceholder: "Search EA features...",
  loadingData: "Loading...",
  applyFeatures: "Apply Selection",
  selectAtLeastOneFeature: "Please select at least one feature first",
  noDataToDownload: "No data to download, please apply feature selection first",
  downloadDataError: "Error downloading data, please check console",
  downloadFormatError: "Error downloading {format} format data, please check console",
  loadFamilyMappingError: "Failed to load family mapping",
  // Data Mode Toggle Related
  dataModeTitle: "Data Mode",
  staticDataLabel: "Static Data (Preprocessed CSV)",
  dynamicDataLabel: "Dynamic Data (Real-time Database Query)",
  currentDataPoints: "Current data points: {count} languages",
  reloadData: "Reload Data",
  downloadStaticData: "Download Static Data",
  unavailableDownload: "Unavailable",
  chooseDownloadFormat: "Choose download format",
  csvFormat: "CSV",
  tsvFormat: "TSV",
  jsonFormat: "JSON",
  summaryFormat: "Summary",
  csvFormatDescription: "CSV format, Excel compatible",
  tsvFormatDescription: "TSV format, Excel friendly",
  jsonFormatDescription: "JSON format, good for program processing",
  summaryFormatDescription: "Data summary report",
  loadingDataMessage: "‚è≥ Processing data...",
  downloadSuccess: "Successfully downloaded {count} rows of static data",
  // Smart Feature Recommendations Related
  smartFeatureRecommendationsTitle: "üéØ Smart Feature Recommendations",
  aiSmartRecommendations: "AI Smart Recommendations",
  enterResearchQuestionOrKeywords: "Enter research question or keywords...",
  generateRecommendations: "Generate",
  currentSelection: "Current Selection",
  successfullyAddedFeatures: "Successfully added {count} new features to selection!",
  databaseOverviewTitle: "Database Overview",
  grammarFeatures: "grammar features",
  socialCulturalFeatures: "social-cultural features",
  total: "Total",
  features: "features",
  researchIdeasTitle: "üî¨ Research Ideas",
  exploreThisIdea: "Explore This Idea",
  discoveredFeaturesTitle: "üîç Discovered Features from Database",
  getAIExplanation: "Get AI Explanation",
  recommendedFeaturesTitle: "üîç Recommended Features",
  hide: "Hide",
  browse: "Browse",
  showingRecommendedFeatures: "Showing {count} recommended features",
  generateRecommendationsError: "Failed to generate recommendations"
};
export default en; 